// <auto-generated />
using System;
using System.Collections.Generic;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;
using TechParser.Core.Data;

#nullable disable

namespace TechParser.Migrations
{
    [DbContext(typeof(ParserDbContext))]
    partial class ParserDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.5")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("TechParser.Models.Client", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<string>("City")
                        .HasColumnType("text");

                    b.Property<string>("Email")
                        .HasColumnType("text");

                    b.Property<string>("Name")
                        .HasColumnType("text");

                    b.Property<string>("Phone")
                        .HasColumnType("text");

                    b.Property<Guid?>("RatingId")
                        .HasColumnType("uuid");

                    b.HasKey("Id");

                    b.HasIndex("RatingId");

                    b.ToTable("Clients");
                });

            modelBuilder.Entity("TechParser.Models.Order", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("Circulation")
                        .HasColumnType("text");

                    b.Property<string>("Description")
                        .HasColumnType("text");

                    b.Property<string>("ExpirationDate")
                        .HasColumnType("text");

                    b.Property<string>("Material")
                        .HasColumnType("text");

                    b.Property<string>("NameDetail")
                        .HasColumnType("text");

                    b.Property<string>("OrderNumber")
                        .HasColumnType("text");

                    b.Property<string>("Price")
                        .HasColumnType("text");

                    b.Property<List<string>>("ProcessingTypes")
                        .HasColumnType("text[]");

                    b.Property<string>("PublicationDate")
                        .HasColumnType("text");

                    b.Property<int>("ResourceId")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.HasIndex("ResourceId");

                    b.ToTable("Orders");
                });

            modelBuilder.Entity("TechParser.Models.ParseFile", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<string>("NameFile")
                        .HasColumnType("text");

                    b.Property<Guid>("OrderId")
                        .HasColumnType("uuid");

                    b.Property<int?>("OrderId1")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.HasIndex("OrderId1");

                    b.ToTable("ParseFiles");
                });

            modelBuilder.Entity("TechParser.Models.Provider", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("Adress")
                        .HasColumnType("text");

                    b.Property<string>("City")
                        .HasColumnType("text");

                    b.Property<string>("CompanyDescription")
                        .HasColumnType("text");

                    b.Property<string>("CompanyName")
                        .HasColumnType("text");

                    b.Property<string>("Email")
                        .HasColumnType("text");

                    b.Property<string>("Phone")
                        .HasColumnType("text");

                    b.Property<string>("TaxpayerIdentificationNumber")
                        .HasColumnType("text");

                    b.Property<List<string>>("TypesOfServices")
                        .HasColumnType("text[]");

                    b.HasKey("Id");

                    b.ToTable("Providers");
                });

            modelBuilder.Entity("TechParser.Models.Rating", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<Guid>("ClientId")
                        .HasColumnType("uuid");

                    b.Property<int>("CountOfRatings")
                        .HasColumnType("integer");

                    b.Property<Guid>("ProviderId")
                        .HasColumnType("uuid");

                    b.Property<int?>("ProviderId1")
                        .HasColumnType("integer");

                    b.Property<double>("RatingCompany")
                        .HasColumnType("double precision");

                    b.HasKey("Id");

                    b.HasIndex("ProviderId1");

                    b.ToTable("Ratings");
                });

            modelBuilder.Entity("TechParser.Models.Resource", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("Adress")
                        .HasColumnType("text");

                    b.Property<string>("Description")
                        .HasColumnType("text");

                    b.Property<string>("Name")
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("Resources");
                });

            modelBuilder.Entity("TechParser.Models.Suggestion", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<string>("Comment")
                        .HasColumnType("text");

                    b.Property<Guid>("OrderId")
                        .HasColumnType("uuid");

                    b.Property<int?>("OrderId1")
                        .HasColumnType("integer");

                    b.Property<decimal>("Price")
                        .HasColumnType("numeric");

                    b.Property<Guid>("ProviderId")
                        .HasColumnType("uuid");

                    b.Property<int?>("ProviderId1")
                        .HasColumnType("integer");

                    b.Property<DateTime>("Term")
                        .HasColumnType("timestamp with time zone");

                    b.HasKey("Id");

                    b.HasIndex("OrderId1");

                    b.HasIndex("ProviderId1");

                    b.ToTable("Suggestions");
                });

            modelBuilder.Entity("TechParser.Models.Client", b =>
                {
                    b.HasOne("TechParser.Models.Rating", null)
                        .WithMany("Clients")
                        .HasForeignKey("RatingId");
                });

            modelBuilder.Entity("TechParser.Models.Order", b =>
                {
                    b.HasOne("TechParser.Models.Resource", "Resource")
                        .WithMany()
                        .HasForeignKey("ResourceId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Resource");
                });

            modelBuilder.Entity("TechParser.Models.ParseFile", b =>
                {
                    b.HasOne("TechParser.Models.Order", "Order")
                        .WithMany()
                        .HasForeignKey("OrderId1");

                    b.Navigation("Order");
                });

            modelBuilder.Entity("TechParser.Models.Rating", b =>
                {
                    b.HasOne("TechParser.Models.Provider", "Provider")
                        .WithMany()
                        .HasForeignKey("ProviderId1");

                    b.Navigation("Provider");
                });

            modelBuilder.Entity("TechParser.Models.Suggestion", b =>
                {
                    b.HasOne("TechParser.Models.Order", "Order")
                        .WithMany()
                        .HasForeignKey("OrderId1");

                    b.HasOne("TechParser.Models.Provider", "Provider")
                        .WithMany()
                        .HasForeignKey("ProviderId1");

                    b.Navigation("Order");

                    b.Navigation("Provider");
                });

            modelBuilder.Entity("TechParser.Models.Rating", b =>
                {
                    b.Navigation("Clients");
                });
#pragma warning restore 612, 618
        }
    }
}
